version: "3.9"

services:
  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    tty: true
    command: ${FRONTEND_COMMAND}
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    networks:
      - node-network

  backend:
    container_name: backend
    image: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    command: ${BACKEND_COMMAND}
    volumes:
      - ./backend:/app
    networks:
      - node-network

  db:
    container_name: db
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - node-network

  nginx:
    build:
      context: ./nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - "80:80"
    networks:
      - node-network
    depends_on:
      - backend
      - frontend

networks:
  node-network:
    driver: bridge

volumes:
  pgdata: {}
